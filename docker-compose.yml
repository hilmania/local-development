version: "3.8"

services:
  traefik:
    networks:
      - proxy
    image: traefik:v2.9
    container_name: "local_traefik"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # connection to the docker daemon for listening docker events       
      - ./certs/:/etc/traefik/certs/:ro # SSL certificates
      - ./static_conf.yml:/traefik.yml:ro # static traefik configuration
      - ./conf/:/etc/traefik/conf/:ro # dynamic traefik configuration
    labels:
      - traefik.enable=true # if true, service will be published in traefik
      - traefik.http.routers.traefik.entrypoints=websecure # setting entry point, that will be used by the service
      - traefik.http.routers.traefik.rule=Host(`hilmania.test`) # the rule by which request will be routed by traefik
      - traefik.http.routers.traefik.tls=true # enabling tls for the router
      - traefik.http.routers.traefik.service=api@internal # specifying a service for the router
      # - traefik.http.services.traefik-traefik.loadbalancer.server.port=8000 # specifying the port to which request will be routed (on the destination service)
  postgres:
    networks:
      - proxy
    image: postgres:15
    container_name: postgres_db
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data/local-dev
    volumes: 
      - ./postgres-data/data:/var/lib/postgresql/data
    ports: 
      - 5432:5432

  mariadb:
    networks:
      - proxy 
    image: mariadb:10.7
    container_name: mariadb
    ports: 
      - 3306:3306
    volumes: 
      - ./mariadb-data:/var/lib/mysql
    environment: 
      - MYSQL_ROOT_PASSWORD=S3cret
      - MYSQL_PASSWORD=An0thrS3crt
      - MYSQL_USER=hilmania_user
      #- MYSQL_DATABASE=db_sample
  
  adminer: 
    networks:
      - proxy
    image: adminer
    ports:
      - 8082:8080
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.adminer.entrypoints=websecure
      - traefik.http.routers.adminer.rule=Host(`adminer.test`)
      - traefik.http.routers.adminer.tls=true
      #- traefik.http.routers.testapp-router.service=testapp-service
      - traefik.http.services.adminer.loadbalancer.server.port=8080

  cache:
    networks:
      - proxy
    image: redis:6.2-alpine
    restart: always
    ports: 
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data

volumes: 
  # postgres-db-volume:
   # driver: local 
  # driver_opts:
    #  type: none 
     # o: bind
     # device: ./postgres-data
  cache:
    driver: local

networks:
  proxy:
    external: true
